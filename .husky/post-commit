#!/bin/sh

# Get the last commit message
COMMIT_MSG=$(git log -1 --pretty=%B)

# Determine version bump type based on commit message
if echo "$COMMIT_MSG" | grep -q "^feat!:\|BREAKING CHANGE:"; then
  BUMP_TYPE="major"
elif echo "$COMMIT_MSG" | grep -q "^feat:"; then
  BUMP_TYPE="minor"
elif echo "$COMMIT_MSG" | grep -q "^fix:\|^perf:"; then
  BUMP_TYPE="patch"
else
  # No version bump needed for other commit types
  exit 0
fi

# Get current version from package.json
CURRENT_VERSION=$(node -p "require('./package.json').version")

# Calculate new version
NEW_VERSION=$(npx semver $CURRENT_VERSION -i $BUMP_TYPE)

echo "ðŸ“¦ Updating version from $CURRENT_VERSION to $NEW_VERSION based on commit type..."

# Update package.json
npm version $NEW_VERSION --no-git-tag-version --allow-same-version >/dev/null 2>&1

# Sync version to other files
node scripts/sync-version.js $NEW_VERSION

# Stage the version changes
git add package.json src-tauri/tauri.conf.json src-tauri/Cargo.toml

# Amend the commit to include version changes
git commit --amend --no-edit --no-verify

echo "âœ… Version updated to $NEW_VERSION"